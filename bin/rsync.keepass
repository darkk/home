#!/bin/bash
# Shell replacement to prevent occasional keepassx database overwriting on
# sync.  Write to ~/.ssh/authorized_keys the following line:
#   command="~/bin/rsync.keepass" ssh-dss A...[the-key]...0= rsync@android
# You may also want to add no-port-forwarding, no-pty, no-user-rc,
# no-X11-forwarding options to authorized_keys too, see man sshd for details.
# -- Leonid Evdokimov <leon@darkk.net.ru>

set -o errexit
#set -o xtrace

mtime() {
    stat --format %Y "$1"
}

hrmtime() {
    stat --format %y "$1"
}

dosync() {
    # no local modifications since last sync, push can be accepted
    if [ ! -a "$db.lock" ]; then
        rsync -a "$tmp"/ "$base"/
    else
        echo 1>&2 "Can't accepted data: $db.lock exists"
        ret=11
    fi
}

base=$HOME/.config/keepassx.db
db=$base/keepass.kdb
ts=lmod.$(hostname)
tmp=/tmp/keepassx.db.$USER

mkdir -p --mode 0700 "$base"

if [ -e "$db" ]; then
    touch -r "$db" "$base/$ts"
fi

rm -rf "$tmp"

# $SSH_ORIGINAL_COMMAND:
# <-- rsync --server --sender -vlHogDtre.i . ~/.config/keepassx.db/
# --> rsync --server -vlHogDtre.i . ~/.config/keepassx.db/

if [[ "$SSH_ORIGINAL_COMMAND" = "rsync --server --sender -"* ]]; then
    exec rsync --server --sender -va . "$base"/
elif  [[ "$SSH_ORIGINAL_COMMAND" = "rsync --server -"* ]]; then
    rsync -a "$base"/ "$tmp"/
    rsync --server -va . "$tmp"/
    ret=$?
    if [ -e "$base/$ts" -a -e "$tmp/$ts" ]; then
        this=$(mtime "$base/$ts")
        remote=$(mtime "$tmp/$ts")
        if [ "$this" = "$remote" ]; then
            dosync
        else
            echo 1>&2 "Can't accept data: there are local modifications at $ts"
            echo 1>&2 "src: "$(hrmtime "$tmp/$ts")
            echo 1>&2 "dst: "$(hrmtime "$base/$ts")
            ret=11 # error in file i/o in man rsync(1)
        fi
    elif [ -e "$base/$ts" -a ! -e "$tmp/$ts" ]; then
        echo 1>&2 "Can't accept data: src was never synced with dst (no $ts)"
        echo 1>&2 "src: ---"
        echo 1>&2 "dst: "$(hrmtime "$base/$ts")
        ret=11 # error in file i/o in man rsync(1)
    elif [ ! -e "$base/$ts" -a -e "$tmp/$ts" ]; then
        if [ -e "$db" ]; then
            echo 1>&2 "Can't accept data: src has $ts and dst has not while $db exists."
            echo 1>&2 "src: "$(hrmtime "$tmp/$ts")
            echo 1>&2 "dst: ---"
            echo 1>&2 "db : "$(hrmtime "$db")
            ret=11
        else
            echo 1>&2 "First-time upload, don't forget to reverse-sync to get $ts"
            dosync
        fi
    else
        echo 1>&2 "First-time upload, don't forget to reverse-sync to get $ts"
        dosync
    fi
    rm -rf "$tmp"
    exit $ret
else
    exit 1
fi
