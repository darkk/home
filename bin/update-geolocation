#!/bin/bash
#
# This script is run by cron(8) to update geolocation cache and feed it to
# redshift(1) in case of significant location change.
#
# Add something something like this to user's crontab:
#
#   28-59/30 * * * * env.session update-geolocation
#
# It should be run within user session to be able to run `redstart redshift'.
#
# It allows redshift(1) offline startup and avoids geoclue-related crashes.
# https://github.com/jonls/redshift/issues/80
#
# This script is in public domain. -- Leonid Evdokimov <leon@darkk.net.ru>
#

tmp=`mktemp ~/.cache/geolocate/last.XXXXXX`
~/bin/geolocate >"$tmp" 2>~/.cache/geolocate/stderr && mv "$tmp" ~/.cache/geolocate/last
rm -f "$tmp"

for pid in $(pidof redshift); do
    distance=$({
        cat ~/.cache/geolocate/last
        tr '\0' ':' </proc/$pid/cmdline
        echo
    } | awk -F: '
        BEGIN {
            PI = 4*atan2(1,1);
            EARTH_R = 6372.8; # The Earth radius in km
        }
        function asin(x) { return atan2(x, sqrt(1-x*x)) }
        function radians(x) { return x * (PI/180) }
        function haversine(lat1, lon1, lat2, lon2) {
            lat1 = radians(lat1);
            lat2 = radians(lat2);
            lon1 = radians(lon1);
            lon2 = radians(lon2);
            return EARTH_R * 2 * asin(sqrt(sin((lat2-lat1)/2)^2 + cos(lat1)*cos(lat2)*sin((lon2-lon1)/2)^2));
        }
        ($2 == "-l") {xlat = $3; xlon = $4}
        (NF == 2) {ylat = $1; ylon = $2}
        END { print int(haversine(xlat, xlon, ylat, ylon)) }')
    if [ "$distance" -ge 50 ]; then
        restart redshift >/dev/null
        break
    fi
done
